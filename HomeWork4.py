# 1. Реализовать скрипт, в котором должна быть предусмотрена функция расчёта заработной платы сотрудника.
# Используйте в нём формулу: (выработка в часах*ставка в час) + премия.
# Во время выполнения расчёта для конкретных значений необходимо запускать скрипт с параметрами.

# from sys import argv
#
# script_name, first_param, second_param, third_param = argv, argv, argv, argv
#
# print("Имя скрипта: ", script_name)
# print("Выработка в часах: ", first_param)
# print("Ставка в час: ", second_param)
# print("Премия: ", third_param)
# print('Зарплата сотрудника составляет: ', first_param*second_param + third_param)

# 2. Представлен список чисел. Необходимо вывести элементы исходного списка,
# значения которых больше предыдущего элемента.
# Подсказка: элементы, удовлетворяющие условию, оформить в виде списка.
# Для его формирования используйте генератор.
# Пример исходного списка: [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55].
# Результат: [12, 44, 4, 10, 78, 123].
# my_list = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]
# e = []
# for i in range(len(my_list) - 1):
#     a = my_list[i]
#     i = i + 1
#     b = my_list[i]
#     if b > a:
#         e.append(b)
# print(e)

# 3. Для чисел в пределах от 20 до 240 найти числа, кратные 20 или 21.
# Решите задание в одну строку.
# Подсказка: используйте функцию range() и генератор.
#print([i for i in range(20, 241) if (int(i) % 20 == 0) or (int(i) % 21 == 0)])

#4. Представлен список чисел. Определите элементы списка, не имеющие повторений.
# Сформируйте итоговый массив чисел, соответствующих требованию.
# Элементы выведите в порядке их следования в исходном списке. Для выполнения задания обязательно используйте генератор.
#Пример исходного списка: [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11].
#Результат: [23, 1, 3, 10, 4, 11]

# my_list = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]
# new_list = []
# for i in my_list:
#     my_list.count(i)
#     if my_list.count(i) == 1:
#         new_list.append(i)
# print(new_list)

#5. Реализовать формирование списка, используя функцию range() и возможности генератора.
# В список должны войти чётные числа от 100 до 1000 (включая границы).
# Нужно получить результат вычисления произведения всех элементов списка.
#Подсказка: использовать функцию reduce().

# my_list = [i for i in range(100, 1001) if i % 2 == 0]
# result = 1
# for i in my_list:
#     result *= i
# print(result)

#6. Реализовать два небольших скрипта:
#итератор, генерирующий целые числа, начиная с указанного;
#итератор, повторяющий элементы некоторого списка, определённого заранее. Подсказка:
# используйте функцию count() и cycle() модуля itertools. Обратите внимание, что создаваемый цикл не должен быть бесконечным.
# Предусмотрите условие его завершения. #### Например, в первом задании выводим целые числа, начиная с 3.
# При достижении числа 10 — завершаем цикл.
# Вторым пунктом необходимо предусмотреть условие, при котором повторение элементов списка прекратится.

# from itertools import count
#
# print("Итератор целых чисел, начиная с указанного")
# n = int(input("Введите целое число: "))
#
# for i in count(n):
#     if i > 10:
#         break
#     else:
#         print(i, end=' ')

# from itertools import cycle
#
# my_list = [1, 2, 4, 6, 8, 2, 1, 'privet']
# с = 0
# for el in cycle(my_list):
#     if с > 10:
#         break
#     print(el)
#     с += 1

#7. Реализовать генератор с помощью функции с ключевым словом yield, создающим очередное значение. При вызове функции должен создаваться объект-генератор.
# Функция вызывается следующим образом: for el in fact(n). Она отвечает за получение факториала числа. В цикле нужно выводить только первые n чисел, начиная с 1! и до n!.
#Подсказка: факториал числа n — произведение чисел от 1 до n. Например, факториал четырёх 4! = 1 * 2 * 3 * 4 = 24.

# from math import factorial
# n = int(input())
# generator = (factorial(param) for param in range(1, n + 1))
#
# for el in generator:
#     print(el)


